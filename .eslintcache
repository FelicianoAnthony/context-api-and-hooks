[{"/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/index.js":"1","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/reportWebVitals.js":"2","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/App.js":"3","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/components/Navbar.js":"4","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/components/TodoList.js":"5","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/contexts/ThemeContext.js":"6","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/contexts/AuthContext.js":"7","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/contexts/TodoListContext.js":"8","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/reducers/todosReducer.js":"9"},{"size":500,"mtime":1607710522072,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607710522081,"results":"12","hashOfConfig":"11"},{"size":707,"mtime":1608219303828,"results":"13","hashOfConfig":"11"},{"size":3248,"mtime":1607965973566,"results":"14","hashOfConfig":"11"},{"size":2400,"mtime":1608222105188,"results":"15","hashOfConfig":"11"},{"size":948,"mtime":1607722276771,"results":"16","hashOfConfig":"11"},{"size":976,"mtime":1607965820016,"results":"17","hashOfConfig":"11"},{"size":1127,"mtime":1608222376932,"results":"18","hashOfConfig":"11"},{"size":384,"mtime":1608222357148,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1aaln54",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/index.js",[],["42","43"],"/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/reportWebVitals.js",[],"/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/App.js",[],"/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/components/Navbar.js",["44","45"],"import React, { Component, useContext } from 'react';\nimport {ThemeContext} from '../contexts/ThemeContext';\nimport {AuthContext} from '../contexts/AuthContext';\n\n// class Navbar extends Component {\n\n//     // contextType can ONLY be used in class component \n//     /* goes \"up the component tree\" to find a Provider and get data in value property from Provider that was found ... \n//     and attaches it to a context property inside this component\n//     */\n//     // static contextType = ThemeContext;\n    \n    \n//     render() {\n//         // const  { isDarkTheme, darkTheme, lightTheme } = this.context;\n//         // const theme = isDarkTheme ? darkTheme : lightTheme;\n        \n//         return (\n//             <AuthContext.Consumer>{(authContext) => {\n//                 return (\n//                     <ThemeContext.Consumer>{(themeContext) => {\n//                         console.log(authContext)\n//                         const  { isDarkTheme, darkTheme, lightTheme } = themeContext;\n//                         const { isLoggedIn, changeAuthStatus} = authContext;\n//                         const theme = isDarkTheme ? darkTheme : lightTheme;\n    \n//                         return (\n//                             <nav style={{background: theme.background, color: theme.text, height: '120px'}}> \n//                             <h2 className={{textAlight: 'center'}}>\n//                                 Oak Academy\n//                             </h2>\n//                             <p \n//                                 onClick={changeAuthStatus}\n//                                 style={{textAlign: 'center'}}    \n//                             > {isLoggedIn ? 'logged in' : 'logged out'}\n//                             </p>\n//                             <div className='ui three buttons'>\n//                                 <button className='ui button'> Overview</button>\n//                                 <button className='ui button'> Contact</button>\n//                                 <button className='ui button'> Support</button>\n//                             </div>\n//                         </nav>\n//                         )\n//                     }} \n//                     </ThemeContext.Consumer>\n//                 )\n//             }}\n//             </AuthContext.Consumer>  \n//         );\n//     }\n// }\n\nconst Navbar = () => {\n\n    const  { isDarkTheme, darkTheme, lightTheme } = useContext(ThemeContext);\n    const { isLoggedIn, changeAuthStatus} = useContext(AuthContext);\n    const theme = isDarkTheme ? darkTheme : lightTheme;\n\n    const test = useContext(AuthContext); \n\n    return (\n        <nav style={{background: theme.background, color: theme.text, height: '120px'}}> \n        <h2 className={{textAlight: 'center'}}>\n            Oak Academy\n        </h2>\n        <p \n            onClick={changeAuthStatus}\n            style={{textAlign: 'center'}}    \n        > {isLoggedIn ? 'logged in' : 'logged out'}\n        </p>\n        <div className='ui three buttons'>\n            <button className='ui button'> Overview</button>\n            <button className='ui button'> Contact</button>\n            <button className='ui button'> Support</button>\n        </div>\n    </nav>\n    ) \n\n}\n\nexport default Navbar;","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/components/TodoList.js",["46"],"import React, { Component, useContext, useState } from 'react';\nimport {ThemeContext} from '../contexts/ThemeContext'\nimport {TodoListContext} from '../contexts/TodoListContext'\n\n// class TodoList extends Component {\n\n//     static contextType = ThemeContext;\n\n//     render() {\n//         const  { isDarkTheme, darkTheme, lightTheme, changeTheme } = this.context;\n//         const theme = isDarkTheme ? darkTheme : lightTheme;\n\n//         return (\n//             <div style={{background: theme.background, color: theme.text, height: '140px'}}>\n//                 <p className='item'> Take a vacation </p>\n//                 <p className='item'> Eat Dinner </p>\n//                 <p className='item'> Stand Up </p>\n//                 <button className='ui button primary' onClick={changeTheme}> Change Theme </button>\n                \n//             </div>\n//         );\n//     }\n// }\n\nconst TodoList = () => {\n\n    const [todo, setTodo] = useState('')\n\n    // const {todos, addTodo, removeTodo} = useContext(TodoListContext)\n    const {todos, dispatch} = useContext(TodoListContext)\n\n    const  { isDarkTheme, darkTheme, lightTheme, changeTheme } = useContext(ThemeContext)\n    const theme = isDarkTheme ? darkTheme : lightTheme;\n\n    const handleChange = (e) => {\n        setTodo(e.target.value)\n    }\n\n    const handleFormSubmit = (e) => {\n        e.preventDefault()\n        // addTodo(todo)\n        dispatch({type: 'ADD_TODO', text: todo})\n        \n\n    }\n\n    const handleRemoveTodo = (e) => {\n        // removeTodo(e.target.id)\n        dispatch({type: 'REMOVE_TODO', id: e.target.id})\n\n    }\n    return (\n        <div style={{background: theme.background, color: theme.text}}>\n            {todos.length ? (\n                todos.map((todo) => {\n                   return  <p id={todo.id} onClick={handleRemoveTodo} className='item' key={todo.id}> {todo.text} </p>\n                }))\n            : ( <div> You have no todos </div>  ) \n            }\n            <form onSubmit={handleFormSubmit}> \n                <label htmlFor='todo'> Add todo: </label>\n                <input type='text' id='todo' onChange={handleChange}/>\n                <input className='ui button primary' value='Add New todo' type='submit'/>\n            </form>\n            <button className='ui button primary' onClick={changeTheme}> Change Theme </button>\n            \n        </div>\n    )\n}\n\nexport default TodoList;","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/contexts/ThemeContext.js",[],"/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/contexts/AuthContext.js",[],"/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/contexts/TodoListContext.js",["47"],"import React, {createContext, useState, useReducer} from 'react'\nimport {todosReducer} from '../reducers/todosReducer'\n\nexport const TodoListContext = createContext() \n\n\n\nconst TodoListContextProvider = ( {children } ) => {\n\n    const [todos, dispatch] = useReducer(todosReducer, [\n        {text: 'Take a Break', id:1},\n        {text: 'Eat Dinner', id:2},\n        {text: 'Stand Up', id:3},\n    ])\n\n    // const [todos, setTodos] = useState([\n    //     {text: 'Take a Break', id:1},\n    //     {text: 'Eat Dinner', id:2},\n    //     {text: 'Stand Up', id:3},\n    // ])\n\n    // const addTodo = (todo) => {\n    //     setTodos([\n    //         ...todos, \n    //         {text: todo, id: Math.random()}\n    //     ]);\n    // };\n\n    // const removeTodo = (id) => {\n    //     setTodos(todos.filter((todo) => {return todo.id !== Number(id)}))\n    // }\n\n    return (\n        // <TodoListContext.Provider value={{todos, addTodo: addTodo, removeTodo: removeTodo}}> \n        <TodoListContext.Provider value={{todos, dispatch}}> \n            {children}\n        </TodoListContext.Provider>\n    )\n}\n\nexport default TodoListContextProvider","/home/fel896/stories/react/udemy_hooks_with_context/contextapi/src/reducers/todosReducer.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"56","line":59,"column":11,"nodeType":"54","messageId":"55","endLine":59,"endColumn":15},{"ruleId":"52","severity":1,"message":"53","line":1,"column":17,"nodeType":"54","messageId":"55","endLine":1,"endColumn":26},{"ruleId":"52","severity":1,"message":"57","line":1,"column":31,"nodeType":"54","messageId":"55","endLine":1,"endColumn":39},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'test' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]